</div>
</div>
</head>
<body>
<script src="/design/dashboard/js/jquery-3.3.1.min.js"></script>
<script src="/design/dashboard/js/popper.min.js"></script>
<script src="/design/dashboard/js/bootstrap.min.js"></script>
<script src="/design/dashboard/js/all.min.js"></script>
<script src="/design/dashboard/js/echarts-en.min.js"></script>
<script src="/design/dashboard/js/anime.min.js"></script>
<script src="/design/dashboard/js/dash.js"></script>
<script src="/design/dashboard/js/design.js"></script>
<script src="/design/dashboard/js/main.js"></script>
<script src="/design/dashboard/js/my-login.js"></script>
<script src="/design/dashboard/js/scriptprofile.js"></script>
<script src="/design/dashboard/lib/tinymce/jquery.tinymce.min.js" referrerpolicy="origin"></script>
<script src="/design/dashboard/lib/tinymce/tinymce.min.js" referrerpolicy="origin"></script><script src="../build/js/custom.min.js"></script>
<script>

    tinymce.init({
        selector : 'textarea',
        plugins : 'image',
        toolbar : 'image',

        images_upload_url : 'upload.php',
        automatic_uploads : false,

        images_upload_handler : function(blobInfo, success, failure) {
            var xhr, formData;

            xhr = new XMLHttpRequest();
            xhr.withCredentials = false;
            xhr.open('POST', 'upload.php');

            xhr.onload = function() {
                var json;

                if (xhr.status != 200) {
                    failure('HTTP Error: ' + xhr.status);
                    return;
                }

                json = JSON.parse(xhr.responseText);

                if (!json || typeof json.file_path != 'string') {
                    failure('Invalid JSON: ' + xhr.responseText);
                    return;
                }

                success(json.file_path);
            };

            formData = new FormData();
            formData.append('file', blobInfo.blob(), blobInfo.filename());

            xhr.send(formData);
        },
    });

</script>
<script>
    (function($) {

        "use strict";

        var fullHeight = function() {

            $('.js-fullheight').css('height', $(window).height());
            $(window).resize(function(){
                $('.js-fullheight').css('height', $(window).height());
            });

        };
        fullHeight();

        $('#sidebarCollapse').on('click', function () {
            if ($(window).width() > 500) { //your chosen mobile res
                $('.text').toggle(300);
                $('#sidebar').toggleClass('active');



            }
            else {
                $('#sidebar').animate({
                    width: 'toggle'
                }, 200);

            }
        });

    })(jQuery);
    $(document).ready(function () {

        // $( "#tog" ).bind({
        //     mouseup: function() {
        //         $('#sidebar').toggleClass('active');
        //         $('.text').css('display', 'none');
        //     },
        // });

        $('#notification-users').mouseover(function () {
           $("#notification-users").css({"overflow-y": "auto"});
        });
        $('#notification-users').mouseleave(function () {
           $("#notification-users").css({"overflow-y": "hidden"});
        });

        $("#notf,#notf1,#notf2,#notf3,#notf4,#notf5,#notf6").text(function(index, currentText) {
           // return currentText.substr(0, 20);
        });
        $('#tog').click(function() {
            if ($(window).width() > 500)
            { //your chosen mobile res
                $('.text').toggle(300);
                $('#user_img').toggle(300);
                $('#userImage').toggle(300);
                $('#img').toggle(300);
                $('#sidebar').toggleClass('active');



            }
            else {
                $('#sidebar').animate({
                    width: 'toggle'
                }, 200);

            }
        });

    });

</script>
<?php
$url = array(
    "http://localhost"
);

reset($_FILES);
$temp = current($_FILES);

if (isset($temp['tmp_name'])  and is_uploaded_file($temp['tmp_name'])) {
    if (preg_match("/([^\w\s\d\-_~,;:\[\]\(\).])|([\.]{2,})/", $temp['name'])) {
        header("HTTP/1.1 400 Invalid file name,Bad request");
        return;
    }

    // Validating File extensions
    if (! in_array(strtolower(pathinfo($temp['name'], PATHINFO_EXTENSION)), array(
        "gif",
        "jpg",
        "png"
    ))) {
        header("HTTP/1.1 400 Not an Image");
        return;
    }

    $fileName = "/images/" . $temp['name'];
    move_uploaded_file($temp['tmp_name'], $fileName);

    // Return JSON response with the uploaded file path.
    echo json_encode(array(
        'file_path' => $fileName
    ));
}
(Message::getMessage('errors'));
 Session::delete('oldFormData');
 ?>
<script>
    $(function() {
        // store a reference to the collapse div so that
        // we don't have to keep looking it up in the dom
        const collapseExample = $("#collapseExample");

        // register a callback function to the collapse div that
        // will be called every time the collapse is opened.
        collapseExample.on("shown.bs.collapse", function() {
            // since we know that that this function is called on
            // open, we'll set the localStorage value to "show"
            localStorage.setItem("collapseExample", "show");
        });

        // register a callback function to the collapse div that
        // will be called every time the collapse is closed.
        collapseExample.on("hidden.bs.collapse", function() {
            // since we know that that this function is called on
            // open, we'll set the localStorage value to "hide"
            localStorage.setItem("collapseExample", "hide");
        });

        // Since this function runs on page load (meaning only once), we can
        // check the value of localStorage from here and then call the
        // bootstrap collapse methods ourselves:

        // Check the value of the localStorage item
        const showExampleCollapse = localStorage.getItem("collapseExample");

        // Manipulate the collapse based on the value of the localStorage item.
        // Note that the value is determined by lines 36 or 44. If you change those,
        // then make sure to check that the comparison on the next line is still valid.
        if (showExampleCollapse === "show") {
            collapseExample.collapse("show");
        } else {
            collapseExample.collapse("hide");
        }
    });
    $(function() {
        // store a reference to the collapse div so that
        // we don't have to keep looking it up in the dom
        const collapseExample1 = $("#collapseExample1");

        // register a callback function to the collapse div that
        // will be called every time the collapse is opened.
        collapseExample1.on("shown.bs.collapse", function() {
            // since we know that that this function is called on
            // open, we'll set the localStorage value to "show"
            localStorage.setItem("collapseExample1", "show");
        });

        // register a callback function to the collapse div that
        // will be called every time the collapse is closed.
        collapseExample1.on("hidden.bs.collapse", function() {
            // since we know that that this function is called on
            // open, we'll set the localStorage value to "hide"
            localStorage.setItem("collapseExample1", "hide");
        });

        // Since this function runs on page load (meaning only once), we can
        // check the value of localStorage from here and then call the
        // bootstrap collapse methods ourselves:

        // Check the value of the localStorage item
        const showExampleCollapse = localStorage.getItem("collapseExample1");

        // Manipulate the collapse based on the value of the localStorage item.
        // Note that the value is determined by lines 36 or 44. If you change those,
        // then make sure to check that the comparison on the next line is still valid.
        if (showExampleCollapse === "show") {
            collapseExample1.collapse("show");
        } else {
            collapseExample1.collapse("hide");
        }
    });
</script>
</body>
</html>